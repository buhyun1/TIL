/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.7
 * Generated at: 2023-04-25 17:01:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class showBasket_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Your basket data</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("  function checkBasket() {\r\n");
      out.write("    let totalOutput = document.querySelector(\"output[name='total']\");\r\n");
      out.write("    if (totalOutput.value == \"0\") {\r\n");
      out.write("      alert(\"No items to purchase!\");\r\n");
      out.write("      return false;\r\n");
      out.write("    }\r\n");
      out.write("    return true;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  function continueShopping() {\r\n");
      out.write("    let inputElements = document.querySelectorAll(\"input[type='number']\");\r\n");
      out.write("    let anInput = null;\r\n");
      out.write("    for (let x = 0; x < inputElements.length; x++) {\r\n");
      out.write("      anInput = inputElements.item(x);\r\n");
      out.write("      document.cookie = anInput.name + \"=\" + anInput.value + \"; SameSite=None; Secure\";\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    let hiddenForm = document.createElement('form');\r\n");
      out.write("    hiddenForm.action = 'index.jsp';\r\n");
      out.write("    hiddenForm.method = 'post';\r\n");
      out.write("    hiddenForm.innerHTML = '<input type=\"submit\">';\r\n");
      out.write("    document.body.append(hiddenForm);\r\n");
      out.write("    hiddenForm.submit();\r\n");
      out.write("  }\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

  int apple = 0, orange = 0, pear = 0;
  int appleTotal = 0, orangeTotal = 0, pearTotal = 0;
  
  Cookie[] c = request.getCookies();
  for (int i = 0; i < c.length; i++) {
    if ("apple".equalsIgnoreCase(c[i].getName())) {
      apple = Integer.parseInt(c[i].getValue());
      appleTotal = apple * 2000;
    }
    
    if ("orange".equalsIgnoreCase(c[i].getName())) {
      orange = Integer.parseInt(c[i].getValue());
      orangeTotal = orange * 3000;
    }
    
    if ("pear".equalsIgnoreCase(c[i].getName())) {
      pear = Integer.parseInt(c[i].getValue());
      pearTotal = pear * 2500;
    }
  }
  
  int total = appleTotal + orangeTotal + pearTotal;

      out.write("\r\n");
      out.write("Your basket:<br><br>\r\n");
      out.write("<form name=\"basketForm\" action=\"purchaseItem.do\" onsubmit=\"return checkBasket()\" method=\"post\"\r\n");
      out.write("  oninput=\"total.value=parseInt(totalApple.value)+parseInt(totalOrange.value)+parseInt(totalPear.value)\">\r\n");
      out.write("  <fieldset style=\"width:270px\">\r\n");
      out.write("    <legend>Choose Your Item</legend>\r\n");
      out.write("	<table>\r\n");
      out.write("	  <tr><td>Item</td><td>Quantity</td><td>Price</td><td>Subtotal</td></tr>\r\n");
      out.write("	  <tr>\r\n");
      out.write("	    <td style=\"text-align:right\"><label for=\"apple\"><small>Apple:</small></label></td>\r\n");
      out.write("		<td><input type=\"number\" id=\"apple\" name=\"apple\" value=\"");
      out.print(apple);
      out.write("\" min=\"0\" style=\"width:5em\"\r\n");
      out.write("		  oninput=\"totalApple.value=apple.value*priceApple.value\"></td>\r\n");
      out.write("        <td><input id=\"priceApple\" value=\"2000\" style=\"width:5em\" readonly></td>\r\n");
      out.write("        <td style=\"text-align:right\" ><output name=\"totalApple\" for=\"apple priceApple\">");
      out.print(appleTotal);
      out.write("</output></td>\r\n");
      out.write("	  </tr>\r\n");
      out.write("	  <tr>\r\n");
      out.write("	    <td style=\"text-align:right\"><label for=\"orange\"><small>Orange:</small></label></td>\r\n");
      out.write("		<td><input type=\"number\" id=\"orange\" name=\"orange\" value=\"");
      out.print(orange);
      out.write("\" min=\"0\" style=\"width:5em\"\r\n");
      out.write("		  oninput=\"totalOrange.value=orange.value*priceOrange.value\"></td>\r\n");
      out.write("        <td><input id=\"priceOrange\" value=\"3000\" style=\"width:5em\" readonly></td>\r\n");
      out.write("        <td style=\"text-align:right\"><output name=\"totalOrange\" for=\"orange priceOrange\">");
      out.print(orangeTotal);
      out.write("</output></td>        \r\n");
      out.write("	  </tr>\r\n");
      out.write("	  <tr>\r\n");
      out.write("	    <td style=\"text-align:right\"><label for=\"pear\"><small>Pear:</small></label></td>\r\n");
      out.write("		<td><input type=\"number\" id=\"pear\" name=\"pear\" value=\"");
      out.print(pear);
      out.write("\" min=\"0\" style=\"width:5em\"\r\n");
      out.write("		  oninput=\"totalPear.value=pear.value*pricePear.value\"></td>\r\n");
      out.write("        <td><input id=\"pricePear\" value=\"2500\" style=\"width:5em\" readonly></td>\r\n");
      out.write("        <td style=\"text-align:right\"><output name=\"totalPear\" for=\"pear pricePear\">");
      out.print(pearTotal);
      out.write("</output></td>\r\n");
      out.write("	  </tr>\r\n");
      out.write("	  <tr>\r\n");
      out.write("	    <td style=\"text-align:right\" colspan=\"3\"><label for=\"total\"><small>Total:</small></label></td>\r\n");
      out.write("        <td style=\"text-align:right\"><output name=\"total\" for=\"totalApple totalOrange totalPear\">");
      out.print(total);
      out.write("</output></td>\r\n");
      out.write("	  </tr>\r\n");
      out.write("	</table><br>\r\n");
      out.write("	\r\n");
      out.write("    <div style=\"width:270px;\" align=\"right\">\r\n");
      out.write("      <input type=\"submit\" id=\"shopping\" value=\"Continue shopping\" onclick=\"continueShopping(); return false;\">&nbsp&nbsp\r\n");
      out.write("      <input type=\"submit\" id=\"submit\" value=\"Click to checkout\">\r\n");
      out.write("    </div>  \r\n");
      out.write("  </fieldset><br>    \r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
